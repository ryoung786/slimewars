name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: [23.0]
        elixir: [1.11.2]

    services:
      db:
        image: postgres:11
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: slime_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
      
      - uses: actions/cache@v1
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - uses: actions/cache@v1
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - run: mix deps.get
      - run: mix format --check-formatted
      - run: mix test
      - run: mix coveralls.json

      - name: Upload coverage to CodeCov
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          fail_ci_if_error: true # optional (default = false)




  # deploy:
  #   needs: test # Will only run if the test job succeeds
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'

  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ref: master # Checkout out master instead of the latest commit
  #         fetch-depth: 0 # Checkout the whole branch

  #     - uses: mhanberg/gigalixir-action@v0.4.0
  #       with:
  #         GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME }}
  #         GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
  #         GIGALIXIR_APP: ${{ secrets.GIGALIXIR_APP_NAME }}
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #         MIGRATIONS: false  # defaults to true

  # notify-deploy:
  #   needs: deploy
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions-hub/gcloud@master
  #       env:
  #         PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
  #         APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
  #       with:
  #         args: pubsub topics publish deploys --message="${{github.actor}}"
